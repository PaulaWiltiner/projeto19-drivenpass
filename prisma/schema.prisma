generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model credentials {
  id       Int    @id @default(autoincrement())
  url      String
  name     String
  password String
  userId   Int
  users    users  @relation(fields: [userId], references: [id])
  title    String
   @@unique([userId,title])
}


model users {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  credentials    credentials[]
  sessions       sessions[]
  securityNotes  securityNotes[]
  wifis           wifis[]
  cards          cards[]
}

model sessions {
  id       Int    @id @default(autoincrement()) 
  token    String @unique
  user     users  @relation(fields: [userId], references: [id])
  userId   Int   
}

model securityNotes {
  id       Int    @id @default(autoincrement())
  userId   Int
  users    users  @relation(fields: [userId], references: [id])
  title    String
  text     String
   @@unique([userId,title])
}

model wifis {
  id       Int    @id @default(autoincrement())
  userId   Int
  users    users  @relation(fields: [userId], references: [id])
  name     String
  password String
}

model cards {
  id       Int    @id @default(autoincrement())
  userId   Int
  users    users  @relation(fields: [userId], references: [id])
  title    String
  number   String
  name     String
  cvc      String
  password String
  expirationDate String
  isVirtual Boolean
  type      Int
  cardType cardType @relation(fields: [type], references: [id])
   @@unique([userId,title])
}

model  cardType {
  id       Int   @id @default(autoincrement())
  type     String
  cards    cards[]
}